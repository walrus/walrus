#!/usr/bin/python

# Script to read a network config from a file and send it
# over serial to an Arduino for network setup.

import serial, time, sys

# Check argument(s).
#
# First arg is filename.
# This should be the path from network/config/ to the file
#
# E.G. 'network.txt'
#
# This script should be run from the project root directory

if len(sys.argv) < 2:
    print "No filename given; try again."
    sys.exit(1)
else:
    filename = "network/config/" + sys.argv[1]

# Open config file, and exit if this is impossible
try:
    config_file = open(filename,"r")
except IOError:
    print "Could not open file  " + filename +  "  please check the file exists"
    sys.exit(1)

tries  = 1
arduino = None

# Open a Serial connection to the Arduino; try 20 times at 1hz then give up
print "Connecting..."
while tries < 21 and not arduino:
    try:
        arduino = serial.Serial('/dev/ttyACM0', 115200, timeout=1)
    except:
        tries += 1
        time.sleep(1)

if tries == 21:
    print "Could not establish Serial connection on /dev/ttyACM0"
    sys.exit(2)

print "success"

# Wait for the 'ready' signal
msg = ""
while "Ready" not in msg:
    msg = arduino.readline()
    print msg

arduino.reset_input_buffer()

print "Writing"

# Read input from config file and write to serial, as well as to the screen
line = config_file.readline()
while line:
    print line
    arduino.write(line)
    line = config_file.readline()

time.sleep(1)
arduino.write('#')
arduino.reset_input_buffer()
print "Finished sending"

while "Received" not in msg:
    msg = arduino.readline()
    if msg:
        print msg

time.sleep(1)
arduino.write('#')
arduino.reset_input_buffer()
print "Received data OK"

# Wait for confirmation from Arduino
while "Finished setup" not in msg:
    msg = arduino.readline()
    if msg and "Received" not in msg:
        print msg

time.sleep(1)
arduino.write('#')
print "Setup complete"

config_file.close()

sys.exit(0)